<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ProxyEndpoint name="default">
    <FaultRules>
        <FaultRule name="JSONThreat">
            <Condition>jsonattack.JTP-Protect.failed == true</Condition>
            <Step>
                <Condition>fault.name Matches "ExecutionFailed"</Condition>
                <Name>AM-400JSONThreat</Name>
            </Step>
        </FaultRule>
    </FaultRules>
    <PreFlow name="PreFlow">
        <Request>
            <Step>
                <Name>SA-SpikeArrest</Name>
            </Step>
            <Step>
                <Name>VAK-VerifyKey</Name>
            </Step>
            <Step>
                <Name>AM-RemoveAuth</Name>
            </Step>
            <Step>
                <Name>Q-EnforceQuota</Name>
            </Step>
        </Request>
        <Response/>
    </PreFlow>
    <Flows>
        <Flow name="getCategories">
            <Description>Get all categories</Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/categories") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="getCategoryById">
            <Description>Get a specific category</Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/categories/*") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="getStores">
            <Description>Get all stores</Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/stores") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="getStoreById">
            <Description>Get a specific store</Description>
            <Request/>
            <Response>
                <Step>
                    <Name>EV-ExtractLatLng</Name>
                </Step>
                <Step>
                    <Name>SC-GoogleGeocode</Name>
                </Step>
                <Step>
                    <Name>EV-ExtractAddress</Name>
                </Step>
                <Step>
                    <Name>JS-AddAddress</Name>
                </Step>
            </Response>
            <Condition>(proxy.pathsuffix MatchesPath "/stores/*") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="getProducts">
            <Description>Get all products</Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/products") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="getProductById">
            <Description>Get a specific product</Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/products/*") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="updateProductById">
            <Description>Update a specific product</Description>
            <Request>
                <Step>
                    <Name>FC-BackendCredentials</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/products/*") and (request.verb = "PATCH")</Condition>
        </Flow>
        <Flow name="createOrder">
            <Description>Create a new order</Description>
            <Request>
                <Step>
                    <Condition>request.header.Content-Type != "application/json"</Condition>
                    <Name>RF-InvalidContentType</Name>
                </Step>
                <Step>
                    <Name>JTP-Protect</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/orders") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="getOrderById">
            <Description>Get a specific order</Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/orders/*") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="deleteOrderById">
            <Description>Delete a specific order</Description>
            <Request/>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/orders/*") and (request.verb = "DELETE")</Condition>
        </Flow>
        <Flow name="404NotFound">
            <Description/>
            <Request>
                <Step>
                    <Name>RF-404NotFound</Name>
                </Step>
            </Request>
            <Response/>
        </Flow>
    </Flows>
    <PostFlow name="PostFlow">
        <Request/>
        <Response>
            <Step>
                <Condition>request.header.Accept == "application/xml"</Condition>
                <Name>J2X-Convert</Name>
            </Step>
        </Response>
    </PostFlow>
    <HTTPProxyConnection>
        <BasePath>/retail/v2</BasePath>
        <VirtualHost>secure</VirtualHost>
    </HTTPProxyConnection>
    <RouteRule name="default">
        <TargetEndpoint>default</TargetEndpoint>
    </RouteRule>
</ProxyEndpoint>